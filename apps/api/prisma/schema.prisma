// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    output   = "../../../node_modules/@prisma/api"
}

datasource db {
    provider          = "postgresql"
    url               = env("DATABASE_URL")
    shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum Role {
    Anonymous
    User
    Admin
    Superadmin
}

enum Size {
    XS
    S
    M
    L
    XL
    XXL
}

enum Color {
    Black
    Blue
    Green
    Lightblue
    White
}

model User {
    id           Int      @id @default(autoincrement())
    createdAt    DateTime @default(now())
    lastSeen     DateTime @default(now())
    updatedAt    DateTime @updatedAt
    email        String   @unique
    passwordHash String
    name         String?
    surname      String?
    role         Role     @default(User)
    // order     order[]
    // cart      cart[]
}

// Define the Product table for storing product data.
model Product {
    id          Int           @id @default(autoincrement())
    name        String
    description String?
    price       Float
    color       Color
    sizes       ProductSize[]
    images      Image[]
    createdAt   DateTime      @default(now())
    updatedAt   DateTime      @updatedAt
    parent      Product?      @relation("VariantParent", fields: [parentId], references: [id])
    parentId    Int?
    variants    Product[]     @relation("VariantParent")
    // store       Store       @relation(fields: [storeId], references: [id])
    // storeId     Int
    // inventory   Inventory[]
    // order       Order?      @relation(fields: [orderId], references: [id])
    // orderId     Int?
    // cart        Cart?       @relation(fields: [cartId], references: [id])
    // cartId      Int?
}

model ProductSize {
    id        Int     @id @default(autoincrement())
    size      Size
    product   Product @relation(fields: [productId], references: [id])
    productId Int
}

// Define the Image table for storing image data.
model Image {
    id        Int     @id @default(autoincrement())
    url       String
    product   Product @relation(fields: [productId], references: [id])
    productId Int
}

// // Define the Order table for storing order data.
// model Order {
//     id         Int       @id @default(autoincrement())
//     createdAt  DateTime  @default(now())
//     updatedAt  DateTime  @updatedAt
//     user       User      @relation(fields: [userId], references: [id])
//     userId     Int
//     products   Product[]
//     totalPrice Float
// }

// // Define the Cart table for storing cart data.
// model Cart {
//     id        Int       @id @default(autoincrement())
//     createdAt DateTime  @default(now())
//     updatedAt DateTime  @updatedAt
//     user      User      @relation(fields: [userId], references: [id])
//     userId    Int
//     products  Product[]
// }

// // Define the Store table for storing store data.
// model Store {
//     id        Int         @id @default(autoincrement())
//     name      String
//     address   String
//     createdAt DateTime    @default(now())
//     updatedAt DateTime    @updatedAt
//     products  Product[]
//     inventory Inventory[]
// }

// // Define the Inventory table for storing inventory data.
// model Inventory {
//     id        Int     @id @default(autoincrement())
//     quantity  Int
//     product   Product @relation(fields: [productId], references: [id])
//     productId Int
//     store     Store   @relation(fields: [storeId], references: [id])
//     storeId   Int
// }
